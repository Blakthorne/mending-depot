// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
	previewFeatures = ["interactiveTransactions"]
}

datasource db {
	provider = "mysql"
	url      = env("DATABASE_URL")
}

model Owner {
	id				String		@id @default(uuid())
	ownerName		String		@unique
	books			Book[]
}

model Book {
	id				String		@id @default(uuid())
	title			String		
	author			String
	publisher		String?
	yearPublished	Int?
	numberOfPages	Int?
	bindingType		BindingType
	received		DateTime	@db.Date
	returned		DateTime?	@db.Date
	bookMaterialsCost	Float?
	amountCharged	Float?
	owner			Owner		@relation(fields: [ownerId], references: [id])
	ownerId			String
	repairs			Repair[]
}

model Repair {
	id				String		@id @default(uuid())
	repairMaterialsCost	Float?
	book			Book		@relation(fields: [bookId], references: [id])
	bookId			String
	replacementCover	ReplacementCover?
	materials		MaterialForRepair[]
	repairType		RepairType	@relation(fields: [repairTypeId], references: [id])
	repairTypeId	String

}

model ReplacementCover {
	id				String		@id @default(uuid())
	coverType		CoverType?
	spineMaterial	CoverMaterial?
	sideMaterial	CoverMaterial?
	repair			Repair		@relation(fields: [repairId], references: [id])
	repairId		String		@unique
}

model RepairType {
	id				String		@id @default(uuid())
	repairTypeName	String		@unique
	materials		MaterialForRepairType[]
	repairs			Repair[]
}

model Material {
	id				String		@id @default(uuid())
	materialName	String
	units			Unit
	unitCost		Float
	repairs			MaterialForRepair[]
	repairTypes		MaterialForRepairType[]
	inventoryTransactions	InventoryTransaction[]
	manufacturer	Manufacturer	@relation(fields: [manufacturerId], references: [id])
	manufacturerId	String
}

model Manufacturer {
	id				String		@id @default(uuid())
	manufacturerName	String	@unique
	materials		Material[]
}

model MaterialForRepair {
	repair			Repair		@relation(fields: [repairId], references: [id])
	repairId		String
	material		Material	@relation(fields: [materialId], references: [id])
	materialId		String
	amountUsed		Float
	@@id([repairId, materialId])
}

model MaterialForRepairType {
	repairType		RepairType	@relation(fields: [repairTypeId], references: [id])
	repairTypeId	String
	material		Material	@relation(fields: [materialId], references: [id])
	materialId		String
	@@id([repairTypeId, materialId])
}

model InventoryTransaction {
	id				String		@id @default(uuid())
	datePurchased	DateTime	@db.Date
	dateReceived	DateTime?	@db.Date
	unitsPurchased	Float
	transactionCost	Float?
	material		Material	@relation(fields: [materialId], references: [id])
	materialId		String
	provider		Provider	@relation(fields: [providerId], references: [id])
	providerId		String
}

model Provider {
	id				String		@id @default(uuid())
	providerName	String		@unique
	inventoryTransactions	InventoryTransaction[]
}

// Change types in additional.d.ts when changing these enums
enum BindingType {
	SEWN
	PERFECT
}

enum CoverType {
	FULL
	QUARTER
	THREEQUARTER
}

enum CoverMaterial {
	BUCKRAM
	BOOKCLOTH
	LEATHER
}

enum Unit {
	INCHES
	INCHESSQUARED
	CENTIMETERS
	CENTIMETERSSQUARED
}